apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: metric-metadata-service
  name: metric-metadata-service
  namespace: production
spec:
  selector:
    matchLabels:
      app: metric-metadata-service
  revisionHistoryLimit: 2
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
      labels:
        app: metric-metadata-service
    spec:
      serviceAccountName: metric-metadata-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 10000
        runAsGroup: 10000
      nodeSelector:
        environment: compute
      containers:
        - image: 380207309407.dkr.ecr.eu-central-1.amazonaws.com/core_services/metric-metadata-service:2024-08-06-b68ae28
          name: metric-metadata-service
          imagePullPolicy: "Always"
          ports:
            - name: main-port
              containerPort: 8080
          resources:
            limits:
              memory: 1000Mi
              cpu: 1000m
            requests:
              cpu: 50m
              memory: 50Mi
          livenessProbe:
            httpGet:
              path: /health
              port: main-port
            failureThreshold: 2
            initialDelaySeconds: 15
            timeoutSeconds: 20
            periodSeconds: 120
          startupProbe:
            httpGet:
              path: /health
              port: main-port
            failureThreshold: 45
            periodSeconds: 10
          envFrom:
            - secretRef:
                name: metric-metadata-service-secrets
            - configMapRef:
                name: metric-metadata-service-config
