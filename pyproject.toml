[tool.poetry]
name = "Metric Metadata Service"
version = "1.0.0"
description = "TODO: Description"
authors = ["Matter Developers X Georgi Dimitrov <dev@thisismatter.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.group.development]
optional = true

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.110.0"
uvicorn = "^0.21.1"
pydantic = {version="^2.6.3", extras=["email"]}
python-dotenv = "^1.0.0"
aiohttp = "^3.8.4"
celery = {version="^5.3.6"}
sentry-sdk = {version="^1.40.6", extras=["fastapi"]}
aiofiles = "^23.2.1"
redis = "^5.0.1"
orjson = "^3.9.10"
passlib = "^1.7.4"
python-jose = "^3.3.0"
python-multipart = "^0.0.6"
alembic = "^1.13.2"
SQLAlchemy = {version="^2.0.4", extras=["asyncio"]}
asyncpg = "^0.29.0"
sqlalchemy-utils = "^0.41.1"
click = "^8.1.7"
colorama = "^0.4.6"
jinja2 = "^3.1.3"
matter-task-queue = {version="^2.2.0", extras=["sentry"]}
matter-api-client = "^1.1.0"
matter-exceptions = {version="^2.0.0", extras=["fastapi, sentry"]}
matter-observability = "^2.0.1"
pydantic-settings = "^2.2.1"
matter-persistence = "^1.0.0"

[tool.poetry.group.development.dependencies]
mypy = "^1.1.1"
pytest = "^8.2.2"
pytest-asyncio = "^0.23.7"
pytest-cov = "^4.1.0"
pytest-celery = "^0.0.0"
pytest-httpserver = "^1.0.10"
pytest-mock = "^3.10.0"
requests = "^2.28.2"
ruff = "^0.5.0"
testcontainers = "^4.7.1"

[tool.pytest.ini_options]
asyncio_mode = "strict"

[tool.ruff]
line-length = 120

[tool.ruff.lint]
extend-select = ["I", "Q", "UP"]

[tool.ruff.format]
line-ending = "lf"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
