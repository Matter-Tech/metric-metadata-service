"""Initial migration

Revision ID: 130dfde97207
Revises: 372d9d9803c4
Create Date: 2024-11-08 13:17:37.117117

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "130dfde97207"
down_revision: Union[str, None] = "372d9d9803c4"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "data_metrics",
        sa.Column("metric_type", sa.String(length=50), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("meta_data", sa.JSON(), nullable=True),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("deleted", sa.DateTime(timezone=True), nullable=True),
        sa.Column("created", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "events",
        sa.Column("event_type", sa.Enum("CREATED", "UPDATED", "DELETED", name="eventtypeenum"), nullable=False),
        sa.Column(
            "node_type",
            sa.Enum("METRIC_SET", "METRIC_SET_TREE", "METRIC", "DATA_METRIC", name="entitytypeenum"),
            nullable=False,
        ),
        sa.Column("node_id", sa.UUID(), nullable=False),
        sa.Column("timestamp", sa.DateTime(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("new_data", sa.JSON(), nullable=True),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("deleted", sa.DateTime(timezone=True), nullable=True),
        sa.Column("created", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "metric_sets",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("ms_id", sa.String(length=100), nullable=False),
        sa.Column("status", sa.Enum("DEPLOYED", "NOT_USED", name="statusenum"), nullable=False),
        sa.Column("short_name", sa.String(length=100), nullable=False),
        sa.Column(
            "placement",
            sa.Enum("ESG_INSIGHTS", "SDGS", "REGULATORY", "COLLECTIONS", name="placementenum"),
            nullable=False,
        ),
        sa.Column("meta_data", sa.JSON(), nullable=True),
        sa.Column("deleted", sa.DateTime(timezone=True), nullable=True),
        sa.Column("created", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("ms_id"),
    )
    op.create_table(
        "metric_set_trees",
        sa.Column("metric_set_id", sa.UUID(), nullable=False),
        sa.Column(
            "node_type", sa.Enum("ROOT", "CATEGORY", "METRIC", "SECTION", "CHART", name="nodetypeenum"), nullable=False
        ),
        sa.Column("node_depth", sa.Integer(), nullable=False),
        sa.Column("node_name", sa.String(length=100), nullable=False),
        sa.Column("node_description", sa.Text(), nullable=True),
        sa.Column("node_reference_id", sa.String(length=100), nullable=False),
        sa.Column("node_special", sa.String(length=100), nullable=True),
        sa.Column("meta_data", sa.JSON(), nullable=True),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("deleted", sa.DateTime(timezone=True), nullable=True),
        sa.Column("created", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["metric_set_id"],
            ["metric_sets.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "metrics",
        sa.Column("metric_set_id", sa.UUID(), nullable=False),
        sa.Column("parent_section_id", sa.UUID(), nullable=True),
        sa.Column("parent_metric_id", sa.UUID(), nullable=True),
        sa.Column("data_metric_id", sa.UUID(), nullable=True),
        sa.Column("status", sa.Enum("DEPLOYED", "NOT_USED", name="statusenum"), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("name_suffix", sa.String(length=50), nullable=True),
        sa.Column("meta_data", sa.JSON(), nullable=True),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("deleted", sa.DateTime(timezone=True), nullable=True),
        sa.Column("created", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["data_metric_id"],
            ["metric_set_trees.id"],
        ),
        sa.ForeignKeyConstraint(
            ["metric_set_id"],
            ["metric_sets.id"],
        ),
        sa.ForeignKeyConstraint(
            ["parent_metric_id"],
            ["metrics.id"],
        ),
        sa.ForeignKeyConstraint(
            ["parent_section_id"],
            ["metric_set_trees.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    (sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),)
    (sa.Column("first_name", sa.VARCHAR(length=100), autoincrement=False, nullable=True),)
    (sa.Column("last_name", sa.VARCHAR(length=100), autoincrement=False, nullable=True),)
    (sa.Column("created", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),)
    (sa.Column("updated", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),)
    (sa.Column("deleted", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),)
    op.drop_table("metrics")
    op.drop_table("metric_set_trees")
    op.drop_table("metric_sets")
    op.drop_table("events")
    op.drop_table("data_metrics")
    # ### end Alembic commands ###
