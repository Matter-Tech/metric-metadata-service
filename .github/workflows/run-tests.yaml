name: Run tests

on:
  push:
    paths-ignore:
      - kubernetes/**
      - scripts/**
      - .gitignore
      - README.md
      - renovate.json

jobs:
  setup:
    name: Setup the environment to run the tests
    runs-on: ubuntu-latest
    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Installing dependencies
        run: |
          sudo apt update && sudo apt-get install build-essential libcurl4-openssl-dev libssl-dev python3-dev -y
          python -m pip install --upgrade pip  

      - name: Install poetry
        run: pipx install poetry

      - name: Installing Python (3.12)
        uses: actions/setup-python@v5
        with:
          python-version: 3.12.4
          cache: poetry

      - name: Installing project
        run: poetry install --with development

  unit-tests:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - uses: actions/checkout@v4
        name: Code checkout

      - name: Install poetry
        run: pipx install poetry

      - name: Installing Python (3.12)
        uses: actions/setup-python@v5
        with:
          python-version: 3.12.4
          cache: poetry

      - name: Installing project
        run: poetry install --with development

      - name: Setting up primary source path
        run: echo "PYTHONPATH=$(pwd):$(pwd)/src" >> $GITHUB_ENV

      - name: Running tests
        run: poetry run pytest --capture=tee-sys tests/unit

  integration-tests:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - uses: actions/checkout@v4
        name: Code checkout

      - name: Install poetry
        run: pipx install poetry

      - name: Installing Python (3.12)
        uses: actions/setup-python@v5
        with:
          python-version: 3.12.4
          cache: poetry

      - name: Installing project
        run: poetry install --with development

      - name: Setting up primary source path
        run: echo "PYTHONPATH=$(pwd):$(pwd)/src" >> $GITHUB_ENV

      - name: Running tests
        env:
          INSTANCE_NAME: "test"
        run: poetry run pytest tests/integration

  e2e-tests:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - uses: actions/checkout@v4
        name: Code checkout

      - name: Install poetry
        run: pipx install poetry

      - name: Installing Python (3.12)
        uses: actions/setup-python@v5
        with:
          python-version: 3.12.4
          cache: poetry

      - name: Installing project
        run: poetry install --only development

      - name: Setting up primary source path
        run: echo "PYTHONPATH=$(pwd):$(pwd)/src" >> $GITHUB_ENV

      - name: Starting docker-compose
        run: |
          docker compose -f docker/docker-compose.yaml build base-builder 
          docker compose -f docker/docker-compose.yaml up --build -d

      - name: Waiting for application to start
        env:
          ATTEMPTS: 0
          MAX_ATTEMPTS: 40
        run: |
          bash -c "until (curl --output /dev/null --silent --fail http://localhost:8080); do if ((ATTEMPTS == MAX_ATTEMPTS)); then exit 1; fi; ((ATTEMPTS++)); printf '.'; sleep 1; done"

      - name: Running tests
        run: poetry run pytest tests/e2e
